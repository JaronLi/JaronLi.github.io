<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Http | 踏雪无痕]]></title>
  <link href="http://jaronli.github.io/blog/categories/http/atom.xml" rel="self"/>
  <link href="http://jaronli.github.io/"/>
  <updated>2015-05-26T22:15:01+08:00</updated>
  <id>http://jaronli.github.io/</id>
  <author>
    <name><![CDATA[李吉龙（Jaron）]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[HTTP简介]]></title>
    <link href="http://jaronli.github.io/blog/2015/05/16/httpjian-jie/"/>
    <updated>2015-05-16T23:36:34+08:00</updated>
    <id>http://jaronli.github.io/blog/2015/05/16/httpjian-jie</id>
    <content type="html"><![CDATA[<p><img src="http://7xj0s4.com1.z0.glb.clouddn.com/life_5.jpg-blog" alt="life-5" /></p>

<h2>1.URL</h2>

<p>统一资源定位符(url) 是互联网上标准资源的地址.<!--more--><br/>
它实际上说明了如何从一个精确固定的位置获取资源<br/>
一般的URL包括三部分.首先是使用的协议,常用为HTTP<br/>
然后是主机名加端口号(默认80)这两部分用:隔开<br/>
最后一部分是想要请求的资源</p>

<h2>2.协议类型</h2>

<p>协议是一种处理请求的方案,代表用什么样的方式来完成请求.常用协议包括:</p>

<ul>
<li>HTTP 超文本传输协议</li>
<li>FTP 文件传输协议</li>
<li>SMTP 简单邮件传输协议 等</li>
</ul>


<h2>3.简述</h2>

<hr />

<p>一次http操作称为一个事物.它由一条请求命令和一个<br/>
响应结果组成.每个请求都会包含一个方法.常用方法:</p>

<ul>
<li>GET    : 从服务器上获得命名资源</li>
<li>PUT    : 将数据存储于服务器中</li>
<li>DELETE : 从服务器上删除资源</li>
<li>POST   : 将客户端数据发送给一个服务器网关程序</li>
</ul>


<hr />

<p>然而http是应用层协议,由于它假设传输是可靠的,因此<br/>
它只负责请求资源与响应而不关注在网络中怎样与服务器<br/>
通信的问题.TCP/IP协议负责完成内容传输.<br/>
层次说明 : <br/>
HTTP             应用层<br/>
TCP              传输层<br/>
IP               网络层<br/>
TCP实际为http传输建立一条连接(可理解为信息传输的道 ) <br/>
TCP连接过程就像打公司办公室某人电话的过程,先是拨打公司<br/>
号码进入正确机构再次拨打想要联系的人的分机号码.</p>

<hr />

<p>http请求及响应过程说明<br/>
1.在地址栏中输入URL<br/>
2.浏览器将URL中解析出服务器主机名<br/>
3.浏览器将服务器主机名解析成服务器IP地址<br/>
4.浏览器将端口号(如果有的话)从URL中解析出来<br/>
5.浏览器建立一条与服务器的TCP连接<br/>
6.浏览器向服务器发送一个HTTP请求<br/>
7.服务器向浏览器发送一个响应<br/>
8.关闭链接  显示资源</p>

<hr />

<p>相关概念</p>

<ul>
<li>网关</li>
<li>代理</li>
<li>缓存</li>
<li>VPN</li>
<li>路由</li>
</ul>

]]></content>
  </entry>
  
</feed>
