---
layout: post
title: "java静态工厂方法与构造方法"
date: 2016-02-26 16:51:40 +0800
comments: true
keywords: java 静态工厂方法 构造方法 单例 
description:
categories: tech
---

![life-1](http://7xj0s4.com1.z0.glb.clouddn.com/life_1.jpg)
  >java中new用于创建对象，构造方法用于初始化对象。但是创建、初始化是一起的，
不可单独存在。    
    创建一个类的时候，通常可以提供两种产生类的对象的方式,常用的是提供public
的构造器。还有一种是静态工厂方法。
<!--more-->
##静态工厂方法
    静态工厂方法首先是静态的，它会返回一个类的实例。首先举一个常见例子    
   
```
public static Boolean valueOf(boolean b){
    return b?Boolean.TRUE:Boolean.FALSE;
}
```
###静态工厂方法提供类的实例相比构造器有以下优点
1.静态工厂方法有名称。   
   在一个类中若要有多个构造器那么唯一的方法就是重载，但是它们的名称确是相同   
的。静态工厂方法给你可以仔细思考有意义的方法名称的机会。   
2.不必每次调用时都创建一个新的对象。   
   不可变类以及单例情形等是不需要每次使用对象都创建一次的。使用静态工厂方法   
允许预先在类中构建好实例，调用方法时返回此实例。即每次调用虽然返回一个对象但   
并没有频繁的执行创建对象的操作。   
3.可以返回原返回类型的任何子类型的对象。   
   对于这一点可以参照设计模式中的工厂模式。通过再静态工厂方法中添加条件判断   
语句，根据不同的条件返回不同类型的对象。如Animal类有Dog和People两个子类，可以   
通过像静态工厂方法中传入一个参数，通过判断参数来确定是返回Dog还是People类的对   
象。   
4.创建参数化类型实例时，使代码变得更加简洁。   
###静态工厂方法提供实例的缺点   
1.如果类中构造器私有化，那么不能进行子类化。   
   构造器私有化意味着不能再类的外部进行调用，因此不能够被继承。但是这种情况   
反而仍然可以使用复合的方式来将类的功能带到其他的类中。   
2.它们与普通的静态方法没有任何区别   


